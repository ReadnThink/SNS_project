/**
 * Gradle 이 빌드되기전 실행되는 설정
 */
buildscript {
    ext {
        springBootVersion = '3.1.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

/**
 * subprojects : setting.gradle 에 include 된 프로젝트를 전부 관리
 */
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.example'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.security:spring-security-test'

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'com.h2database:h2'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // test 환경 Lombok 사용
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        // jwt
        implementation group: 'com.auth0', name: 'java-jwt', version: '4.2.1'

        // Configuring Annotation Processor
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        // Spring Integration
        implementation 'org.springframework.boot:spring-boot-starter-integration'

        // aop
        implementation 'org.springframework.boot:spring-boot-starter-aop'

        // kafka
        implementation 'org.springframework.kafka:spring-kafka'

        // json
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
        // CommentResponse lastModifiedAt을 없애면 localdateTime을 직/역직렬화하지 않기 때문에 안써도 됨
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

/**
 * 하위 모듈 알려주기
 */
project(':core') {

    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':sns') {
    // bootJar은 실행가능한 jar를 만들려 하기 때문에 main()이 필요
    bootJar { enabled = true }
    jar { enabled = true }

    dependencies {
        implementation project(':core')
        implementation project(':query')
        // sql
        runtimeOnly 'com.mysql:mysql-connector-j'
    }
}

project(':query') {

    bootJar { enabled = true }
    jar { enabled = true }

    dependencies {
        implementation project(':core')
        // sql
        runtimeOnly 'com.mysql:mysql-connector-j'
    }
}

